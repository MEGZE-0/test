{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';import{Bar}from'react-chartjs-2';import'chart.js/auto';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[data,setData]=useState({customers:[],transactions:[]});const[filter,setFilter]=useState({customerName:'',transactionAmount:''});const[selectedCustomer,setSelectedCustomer]=useState(null);const[chartData,setChartData]=useState({});useEffect(()=>{axios.get('http://localhost:5001/api/data').then(response=>setData(response.data)).catch(error=>console.error('Error fetching data:',error));},[]);useEffect(()=>{if(selectedCustomer){const customerTransactions=data.transactions.filter(transaction=>transaction.customer_id===selectedCustomer.id);const groupedByDate=customerTransactions.reduce((acc,transaction)=>{acc[transaction.date]=(acc[transaction.date]||0)+transaction.amount;return acc;},{});setChartData({labels:Object.keys(groupedByDate),datasets:[{label:'Total Transaction Amount',data:Object.values(groupedByDate),backgroundColor:'rgba(75, 192, 192, 0.6)',borderColor:'rgba(75, 192, 192, 1)',borderWidth:1}]});}},[selectedCustomer,data.transactions]);const handleFilterChange=e=>{const{name,value}=e.target;setFilter({...filter,[name]:value});};const filteredCustomers=data.customers.filter(customer=>customer.name.toLowerCase().includes(filter.customerName.toLowerCase()));const filteredTransactions=data.transactions.filter(transaction=>filter.transactionAmount===''||transaction.amount===Number(filter.transactionAmount));const handleCustomerClick=customer=>{setSelectedCustomer(customer);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Customer Transactions\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"customerinput\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"customerName\",placeholder:\"Filter by customer name\",value:filter.customerName,onChange:handleFilterChange}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"transactionAmount\",placeholder:\"Filter by transaction amount\",value:filter.transactionAmount,onChange:handleFilterChange})]}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Customer Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Transaction Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Transaction Amount\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:filteredCustomers.map(customer=>filteredTransactions.filter(transaction=>transaction.customer_id===customer.id).map(transaction=>/*#__PURE__*/_jsxs(\"tr\",{onClick:()=>handleCustomerClick(customer),children:[/*#__PURE__*/_jsx(\"td\",{children:customer.name}),/*#__PURE__*/_jsx(\"td\",{children:transaction.date}),/*#__PURE__*/_jsx(\"td\",{children:transaction.amount})]},transaction.id)))})]}),selectedCustomer&&chartData.labels&&chartData.datasets?/*#__PURE__*/_jsxs(\"div\",{className:\"chart-container\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Transactions for \",selectedCustomer.name]}),/*#__PURE__*/_jsx(Bar,{data:chartData})]}):selectedCustomer&&/*#__PURE__*/_jsx(\"div\",{className:\"no-data\",children:\"No data available for the selected customer.\"})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","axios","Bar","jsx","_jsx","jsxs","_jsxs","App","data","setData","customers","transactions","filter","setFilter","customerName","transactionAmount","selectedCustomer","setSelectedCustomer","chartData","setChartData","get","then","response","catch","error","console","customerTransactions","transaction","customer_id","id","groupedByDate","reduce","acc","date","amount","labels","Object","keys","datasets","label","values","backgroundColor","borderColor","borderWidth","handleFilterChange","e","name","value","target","filteredCustomers","customer","toLowerCase","includes","filteredTransactions","Number","handleCustomerClick","children","className","type","placeholder","onChange","map","onClick"],"sources":["G:/OneDrive/Desktop/job-fair/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport './App.css'\nfunction App() {\n    const [data, setData] = useState({ customers: [], transactions: [] });\n    const [filter, setFilter] = useState({ customerName: '', transactionAmount: '' });\n    const [selectedCustomer, setSelectedCustomer] = useState(null);\n    const [chartData, setChartData] = useState({});\n\n    useEffect(() => {\n        axios.get('http://localhost:5001/api/data')\n            .then(response => setData(response.data))\n            .catch(error => console.error('Error fetching data:', error));\n    }, []);\n\n    useEffect(() => {\n        if (selectedCustomer) {\n            const customerTransactions = data.transactions.filter(transaction => transaction.customer_id === selectedCustomer.id);\n            const groupedByDate = customerTransactions.reduce((acc, transaction) => {\n                acc[transaction.date] = (acc[transaction.date] || 0) + transaction.amount;\n                return acc;\n            }, {});\n\n            setChartData({\n                labels: Object.keys(groupedByDate),\n                datasets: [{\n                    label: 'Total Transaction Amount',\n                    data: Object.values(groupedByDate),\n                    backgroundColor: 'rgba(75, 192, 192, 0.6)',\n                    borderColor: 'rgba(75, 192, 192, 1)',\n                    borderWidth: 1\n                }]\n            });\n        }\n    }, [selectedCustomer, data.transactions]);\n\n    const handleFilterChange = (e) => {\n        const { name, value } = e.target;\n        setFilter({ ...filter, [name]: value });\n    };\n\n    const filteredCustomers = data.customers.filter(customer => \n        customer.name.toLowerCase().includes(filter.customerName.toLowerCase()));\n\n    const filteredTransactions = data.transactions.filter(transaction => \n        (filter.transactionAmount === '' || transaction.amount === Number(filter.transactionAmount)));\n\n    const handleCustomerClick = (customer) => {\n        setSelectedCustomer(customer);\n    };\n\n    return (\n      <div>\n          <h1>Customer Transactions</h1>\n          <div className='customerinput'>\n              <input\n                  type=\"text\"\n                  name=\"customerName\"\n                  placeholder=\"Filter by customer name\"\n                  value={filter.customerName}\n                  onChange={handleFilterChange}\n              />\n              <input\n                  type=\"number\"\n                  name=\"transactionAmount\"\n                  placeholder=\"Filter by transaction amount\"\n                  value={filter.transactionAmount}\n                  onChange={handleFilterChange}\n              />\n          </div>\n          <table>\n              <thead>\n                  <tr>\n                      <th>Customer Name</th>\n                      <th>Transaction Date</th>\n                      <th>Transaction Amount</th>\n                  </tr>\n              </thead>\n              <tbody>\n                  {filteredCustomers.map(customer => (\n                      filteredTransactions\n                          .filter(transaction => transaction.customer_id === customer.id)\n                          .map(transaction => (\n                              <tr key={transaction.id} onClick={() => handleCustomerClick(customer)}>\n                                  <td>{customer.name}</td>\n                                  <td>{transaction.date}</td>\n                                  <td>{transaction.amount}</td>\n                              </tr>\n                          ))\n                  ))}\n              </tbody>\n          </table>\n          {selectedCustomer && chartData.labels && chartData.datasets ? (\n              <div className=\"chart-container\">\n                  <h2>Transactions for {selectedCustomer.name}</h2>\n                  <Bar data={chartData} />\n              </div>\n          ) : (\n              selectedCustomer && <div className=\"no-data\">No data available for the selected customer.</div>\n          )}\n          \n      </div>\n\n  \n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}